generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma" // use this if you use custom output generate prisma
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         BigInt      @id @default(autoincrement())
  name       String      @db.VarChar(255)
  username   String      @db.VarChar(255)
  email      String      @db.VarChar(255)
  password    String      @db.VarChar(255)
  created_at DateTime?   @default(now())
  updated_at DateTime?   @updatedAt
  deleted_at DateTime?   @db.Timestamp(0)
  user_role  user_role[]
  user_auth  user_auth[]
}

model user_auth {
  id            BigInt    @id @default(autoincrement())
  user_id       BigInt
  refresh_token String    @db.VarChar(255)
  status        Boolean   @db.Boolean
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt
  deleted_at    DateTime? @db.Timestamp(0)

  user user @relation(fields: [user_id], references: [id])
}

model role {
  id         BigInt      @id @default(autoincrement())
  name       String      @db.VarChar(255)
  created_at DateTime?   @default(now())
  updated_at DateTime?   @updatedAt
  deleted_at DateTime?   @db.Timestamp(0)
  user_role  user_role[]
}

model user_role {
  user_id    BigInt
  role_id    BigInt
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime? @db.Timestamp(0)
  user       user      @relation(fields: [user_id], references: [id])
  role       role      @relation(fields: [role_id], references: [id])

  @@id([user_id, role_id])
  @@map("user_roles")
}
